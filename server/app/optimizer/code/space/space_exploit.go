package space

import "github.com/rs/zerolog/log"

func (s *Space) Exploit(floorPrice, price float64) (float64, error) {
	s.wcMutex.Lock()
	defer s.wcMutex.Unlock()

	var lastError error
	sum := 0.0
	successes := 0
	for i := 0; i < len(s.Levels); i++ {
		r, err := s.Levels[i].exploit(floorPrice, price)
		if err != nil {
			lastError = err
		}
		sum += r
		successes += 1
	}

	if 2*successes < len(s.Levels) {
		log.Debug().Msgf("failed to exploit #successes%d out of %d", successes, len(s.Levels))
		return price, lastError
	}
	return sum / float64(successes), nil
}
